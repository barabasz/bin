#!/bin/zsh

# oh-my-zsh (omz)
# an open source framework for managing zsh configuration
# https://ohmyz.sh
# https://github.com/ohmyzsh/ohmyzsh

# load variables and functions
zshload="$ZDOTDIR/.zsh_load"; pref="\e[1;91m"; suff="\e[0m"
loaderr="${pref}Error loading $zshload: file not found.${suff}"
[[ -f $zshload ]] && source $zshload || { echo -e $loaderr; return 1; }

[[ ! -n $ZSH ]] && ZSH=$HOME/.config/omz
[[ ! -n $ZSH_CUSTOM ]] && ZSH_CUSTOM=$ZSH/custom

function installplugin() {
    prepo=https://github.com/zsh-users/$1.git
    pdir=$ZSH_CUSTOM/plugins/$1
    printhead "Installing $1"
    [[ -d $pdir ]] && rm -rf $pdir
    git clone $prepo $pdir
}

function isomzinstalled() {
    if [[ -d $ZSH ]] && [[ $(omz version | grep -o 'master' | head -1) = 'master' ]]; then
        echo 1
    else
        echo 0
    fi
}

function omzversion() {
    printf "${green}oh-my-zsh ${yellow}$(omz version)$reset is installed in ${purple}$ZSH${reset}\n"
}

if [[ ! $(isomzinstalled) ]]; then
    [[ -f $TMPDIR/.zshrc ]] && rm -f $TMPDIR/.zshrc
    cp $ZDOTDIR/.zshrc $TMPDIR/.zshrc
    printinfo ".zshrc backed up to $TMPDIR/.zshrc"
    omzinstall=https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
    export ZSH="$CONFDIR/omz"
    sh -c "$(curl -fsSL $omzinstall)" "" --unattended
else
    omz update
    omzversion
fi

# Fish-like fast/unobtrusive autosuggestions
installplugin zsh-autosuggestions

# Fish shell-like syntax highlighting
installplugin zsh-syntax-highlighting

rm -f $ZDOTDIR/.zshrc
rm -f $ZDOTDIR/.zshrc.pre-oh-my-zsh
cp $TMPDIR/.zshrc $ZDOTDIR/.zshrc
printinfo ".zshrc restored from $TMPDIR/.zshrc"
