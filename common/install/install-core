#!/bin/zsh

# set variables
varbls="https://raw.githubusercontent.com/barabasz/config/main/zsh/.zshenv"
fnfile="https://raw.githubusercontent.com/barabasz/config/main/zsh/.zsh_functions"
colors="https://raw.githubusercontent.com/barabasz/bin/main/lib/colors.sh"
github="https://raw.githubusercontent.com/barabasz/bin/main/common/install"
update="https://raw.githubusercontent.com/barabasz/bin/main/common/update"
source <(curl -fsSL $varbls)
source <(curl -fsSL $colors)

printf "\n${redbi}Automatic environment configuration script${clear}\n"
# sudo password forcing
sudo echo > /dev/null

# sourcing functions
printf "\n${yellowb}Loading install environment${clear}\n"

source <(curl -fsSL $fnfile)
printinfo 'Functions loaded.'

# create config directory
mkdir -p ~/.config

# Generatle locale (Ubuntu)
if [[ "$(osname)" == "ubuntu" ]]; then
    printhead 'Installing locales...'
    source <(curl -fsSL $github/install-locales) 2>/dev/null | grep "done"
    printinfo 'Locales installed.'
fi

# Update and upgrade
printhead 'Updating system...'
source <(curl -fsSL $update)
printinfo 'System updated.'

# Git
printhead 'Installing git...'
source <(curl -fsSL $github/install-git)

# gh - GitHub CLI
printhead 'Installing gh...'
source <(curl -fsSL $github/install-gh)

# clone main repositories
printhead 'Cloning setup repositories...'
source <(curl -fsSL $github/install-repos)

# symlinks
printhead 'Creating symlinks...'
source <(curl -fsSL $github/install-symlinks)

#brew
printhead 'Installing brew...'
install-brew
if [[ -f /opt/homebrew/bin/brew ]]; then
    eval "$(/opt/homebrew/bin/brew shellenv)"
elif [[ -f /home/linuxbrew/.linuxbrew/bin/brew ]]; then
    eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
fi

# certificates
printhead 'Installing certificates...'
install-certs

return 2> /dev/null; exit

# Basic brew libraries
printhead 'Installing brew core packages...'
extscript $github/install-brew-core

# ncurses - Text-based UI library
printhead 'Installing ncurses...'
extscript $github/install-ncurses

# gcc  - GNU compiler collection
printhead 'Installing gcc...'
extscript $github/install-gcc





# set temporary path and locale
export PATH=$HOME/bin:$HOME/bin/install:$HOME/binos:/usr/local/bin:$PATH

# disable NEEDRESTART prompt
if [[ "$(osname)" == "ubuntu" ]]; then
    printhead 'Setting NEEDRESTART_MODE to auto...'
    disable-needrestart
fi

# set locale
if [[ "$(osname)" != "macos" ]]; then
    printhead 'Setting locale...'
    set-locale
fi

# acl - Commands for manipulating POSIX access control lists
if [[ "$(osname)" != "macos" ]]; then
    printhead 'Installing acl...'
    install-acl
fi

# cmake  - Cross-platform make
printhead 'Installing cmake...'
install-cmake

# Collection of Linux utilities
if [[ ! "$(osname)" == "macos" ]]; then
    printhead 'Installing util-linux...'
    install-util-linux
fi

# archivers
printhead 'Installing archivers...'
install-archivers

# minimize login info
if [[ ! "$(osname)" == "macos" ]]; then
    printhead 'Minimizing login info...'
    fix-login-info
    echo 'Done.'
fi

# remove snap
if [[ "$(osname)" == "ubuntu" ]]; then
    printhead 'Removing snap...'
    remove-snap
fi

# zsh
if [[ ! "$(osname)" == "macos" ]]; then
    printhead 'Installing zsh...'
    install-zsh
fi

# omz
printhead 'Installing oh-my-zsh...'
install-omz

printhead 'Core installation completed.'
printhead 'Reload terminal to apply changes.'
