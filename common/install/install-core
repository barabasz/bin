#!/bin/bash

# THIS SCRIPT IS INTENTIONALLY WRITTEN IN BASH

# load functions
echo 'Loading install environment and functions...'
loadfnurl="https://raw.githubusercontent.com/barabasz/bin/main/common/loadfn"
if command -v loadfn &> /dev/null; then loadfn
else source <(curl -fsSL $loadfnurl); fi

printhead 'Test...'
exit 1

# set variables
github="https://raw.githubusercontent.com/barabasz/bin/main/common/install"
# sudo password forcing
sudo echo > /dev/null
# create config directory
mkdir -p $CONFDIR

# Generatle locale (Ubuntu)
if [[ "$(osname)" == "ubuntu" ]]; then
    printhead 'Installing locales...'
    extscript $github/install-locales 2>/dev/null | grep "done"
fi

# Update and upgrade
if [[ ! "$(osname)" == "macos" ]]; then
    printhead 'Updating system...'
    extscript $(echo $github | sed 's/\/install//')/update
    echo "System updated."
fi

# Git
printhead 'Installing git...'
extscript $github/install-git

# brew
printhead 'Installing brew...'
extscript $github/install-brew
if [[ -f /opt/homebrew/bin/brew ]]; then
    eval "$(/opt/homebrew/bin/brew shellenv)"
elif [[ -f /home/linuxbrew/.linuxbrew/bin/brew ]]; then
    eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
fi

# certificates
printhead 'Installing certificates...'
extscript $github/install-certs

# Basic brew libraries
printhead 'Installing brew core packages...'
extscript $github/install-brew-core

# ncurses - Text-based UI library
printhead 'Installing ncurses...'
extscript $github/install-ncurses

# gcc  - GNU compiler collection
printhead 'Installing gcc...'
extscript $github/install-gcc

# gh - GitHub CLI
printhead 'Installing gh...'
extscript $github/install-gh

# clone main repositories
printhead 'Cloning setup repositories...'
extscript $github/install-repos

# symlinks
printhead 'Creating symlinks...'
extscript $github/install-symlinks

# set temporary path and locale
export PATH=$HOME/bin:$HOME/bin/install:$HOME/binos:/usr/local/bin:$PATH

# disable NEEDRESTART prompt
if [[ "$(osname)" == "ubuntu" ]]; then
    printhead 'Setting NEEDRESTART_MODE to auto...'
    disable-needrestart
fi

# set locale
if [[ "$(osname)" != "macos" ]]; then
    printhead 'Setting locale...'
    set-locale
fi

# acl - Commands for manipulating POSIX access control lists
if [[ "$(osname)" != "macos" ]]; then
    printhead 'Installing acl...'
    install-acl
fi

# cmake  - Cross-platform make
printhead 'Installing cmake...'
install-cmake

# Collection of Linux utilities
if [[ ! "$(osname)" == "macos" ]]; then
    printhead 'Installing util-linux...'
    install-util-linux
fi

# archivers
printhead 'Installing archivers...'
install-archivers

# minimize login info
if [[ ! "$(osname)" == "macos" ]]; then
    printhead 'Minimizing login info...'
    fix-login-info
    echo 'Done.'
fi

# remove snap
if [[ "$(osname)" == "ubuntu" ]]; then
    printhead 'Removing snap...'
    remove-snap
fi

# zsh
if [[ ! "$(osname)" == "macos" ]]; then
    printhead 'Installing zsh...'
    install-zsh
fi

# omz
printhead 'Installing oh-my-zsh...'
install-omz

printhead 'Core installation completed.'
printhead 'Reload terminal to apply changes.'
